@import "~@angular/material/theming";
@import 'core/general';

@mixin st-button-generator($backgroundColor, $foregroundColor) {
  color: $foregroundColor;
  background: $backgroundColor;
  &:not([disabled]) {
    border: 1px solid darken($backgroundColor, 5%);
  }
  &[disabled] {
    opacity: .4;
    color: $foregroundColor !important;
    border: 1px solid darken($backgroundColor, 5%);
    &:hover {
      background: $backgroundColor;
    }
  }
  &:hover {
    background: darken($backgroundColor, 5%);
    border: 1px solid darken($backgroundColor, 10%);
  }
  &:focus {
    box-shadow: 0 0 7px lighten($backgroundColor, 20%);
  }
}


@mixin st-button-theme($theme) {
  $background: map-get($theme, background);
  $accent: map-get($theme, accent);
  $primary: map-get($theme, primary);
  $warn: map-get($theme, warn);
  $appColor: mat-color($primary, $st-default-color-shade);
  $buttonBackground: mat-color($background, background);
  // $appColor10: mat-color($primary, 100);
  // $appColor20: mat-color($primary, 200);
  // $appColor30: mat-color($primary, 300);
  // $appColor700: mat-color($primary, 700);
  // $divider: mat-color($primary, $st-default-divider-color-hue);

  button {
    // General rules
    &.mat-button,  
    &.mat-stroked-button, 
    &.mat-raised-button, 
    &.mat-flat-button {
      color: $appColor;
      min-width: 30px;
      transition: all .1s;
      padding: 0 12px;
      box-shadow: 0 0 0 white; //base box-shadow so :focus transition works well
      mat-icon {
        line-height: 24px;
        margin-left: -4px; // pull icon left so it's inlined with the padding
        // vertical-align: sub; // is this the best way to center the icon vertically?
      }
      &:not(:last-child) {
          margin-right: 15px;
      }
      &:focus {
        box-shadow: 0 0 7px lighten(mat-color($primary), 80%);
      }
    }
    // Specific rules
    &.mat-flat-button {
      padding: 0 5px;
    }
    &.mat-stroked-button {
      // @include st-button-generator(#fff, mat-color($primary));
      // border-color: lighten(mat-color($primary), 10%);
      &:not([disabled]) {
        border: 1px solid desaturate(lighten(mat-color($primary), 35%), 35%);
      }
      &[disabled] {
        opacity: .4;
        color: mat-color($primary) !important;
        border: 1px solid darken(mat-color($primary), 5%);
      }

    }
    &.mat-button.mat-primary {
      @include st-button-generator(mat-color($primary), #fff);
    }
    &.mat-button.mat-accent {
      @include st-button-generator(mat-color($accent), #fff);
    }
    &.mat-button.mat-warn {
      @include st-button-generator(mat-color($warn), #fff);
    }
    // TODO: needs work
    &.st-rou-button {
      padding: 0 5px;
      min-width: auto;
      border-radius: 50% !important;
      border-color: desaturate(lighten(mat-color($primary), 45%), 35%);
      .mat-icon {
        margin: 0;
      }
    }
  }
  // Should be in its own component so we have view encapsulation and NO !important
  .st-menu-button {
    display: inline-block;
    button {
      margin: 0 !important;
      &:not(.more-actions) {
        border-right: none !important;
        border-bottom-right-radius: 0 !important;
        border-top-right-radius: 0 !important;
        .mat-icon {
          padding-right: 5px;
        }
      }
      &.more-actions {
        border-left: 1px solid desaturate(lighten(mat-color($primary), 35%), 35%) !important;
        padding: 0 !important;    
        min-width: 0 !important;
        border-bottom-left-radius: 0 !important;
        border-top-left-radius: 0 !important;
        mat-icon {
          line-height: 24px;
          margin: 0; // override general icon pull
        }
      }
    }
  }

  // Crappy code because we won't be using this one
  .st-fab {
    position: fixed !important;
    bottom: 20px;
    right: 20px;
    white-space: pre-wrap !important;
    font-size: 11px !important;
    color: #fefefe;
    font-weight: bold !important;
    z-index: 999999;
    .mat-button-wrapper {
      padding: 15px 5px 5px 6px !important;
      opacity: .5;
      line-height: 14px !important;
    }
    &.direction {
      right: 80px;
    }
  }
}